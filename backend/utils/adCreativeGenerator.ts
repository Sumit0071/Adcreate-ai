import { GoogleGenAI } from "@google/genai";
import * as fs from "node:fs";

export interface AdData {
  businessname: string;
  niche: string;
  productService: string;
  adGoal: string;
  targetAudience: string;
}

const geminiApiKey = process.env.GEMINI_API_KEY;
if ( !geminiApiKey ) {
  throw new Error( "‚ùå Gemini API key is not set in environment variables." );
}

const ai = new GoogleGenAI( { apiKey: geminiApiKey } );

export const generateAdsequence = async ( data: AdData ) => {
  try {
    const { businessname, niche, productService, adGoal, targetAudience } = data;

    // üìù Polished prompt with clarity
    const prompt = `
    Create a **Facebook ad** for the business: "${businessname}".

    - Niche: ${niche}
    - Product/Service: ${productService}
    - Goal: ${adGoal}
    - Target Audience: ${targetAudience}

    Requirements:
    - Engaging, persuasive copy (headline + body text + CTA).
    - Professional, modern style suitable for startups & SMEs.
    - Generate both: 
        1. The ad copy (text).
        2. A Facebook ad creative (image).
    `;

    const response = await ai.models.generateContent( {
      model: "gemini-2.5-flash-image-preview",
      contents: [{ role: "user", parts: [{ text: prompt }] }],
    } );

    if ( !response.candidates?.length ) {
      console.warn( "‚ö†Ô∏è No response candidates from Gemini." );
      return;
    }

    const candidate = response.candidates[0];
    const parts = candidate.content?.parts || [];

    let adCopy = "";
    let imageSaved = false;

    for ( const part of parts ) {
      if ( part.text ) {
        adCopy += part.text + "\n";
      } else if ( part.inlineData?.data ) {
        try {
          const buffer = Buffer.from( part.inlineData.data, "base64" );
          const fileName = "facebook-ad-creative.png";
          fs.writeFileSync( fileName, buffer );
          console.log( `‚úÖ Image saved as ${fileName}` );
          imageSaved = true;
        } catch ( err ) {
          console.error( "‚ùå Failed to save image:", err );
        }
      }
    }

    if ( adCopy ) {
      console.log( "\nüì¢ Generated Ad Copy:\n" );
      console.log( adCopy.trim() );
    }

    if ( !imageSaved ) {
      console.log( "‚ö†Ô∏è No image was generated by Gemini." );
    }
  } catch ( error ) {
    console.error( "‚ùå Error generating ad sequence:", error );
  }
};
